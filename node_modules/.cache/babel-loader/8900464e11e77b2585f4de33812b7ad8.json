{"ast":null,"code":"var _jsxFileName = \"/Users/disu/Documents/GitHub/crypto/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport HomeTest from \"./home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nasync function App() {\n  _s();\n\n  const [state, setState] = useState({\n    btc: \"\"\n  });\n\n  async function getBtcPrice() {\n    try {\n      let response = await fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\");\n      const json = await response.json();\n      return json;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  let abc = await getBtcPrice();\n  console.log(abc); // let testa = {};\n  // async function test() {\n  //   let abc = await getBtcPrice();\n  //   testa = abc\n  // }\n  // test()\n  // console.log(testa)\n  // let test = {};\n  // getBtcPrice().then((result) => {\n  //   console.log(\"result\", result);\n  //   // return result\n  // });\n  // console.log(\"test\", test);\n  // console.log(\"btcPrice\", btcPrice)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(HomeTest, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"X8aZlefCJA/OWlNkEwE2gPgmv2I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/disu/Documents/GitHub/crypto/src/App.tsx"],"names":["useState","HomeTest","App","state","setState","btc","getBtcPrice","response","fetch","json","err","console","log","abc"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,QAArB;;;;AAEA,eAAeC,GAAf,GAAqB;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;AACjCK,IAAAA,GAAG,EAAE;AAD4B,GAAD,CAAlC;;AAIA,iBAAeC,WAAf,GAA6B;AAC3B,QAAI;AACF,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CACxB,6EADwB,CAA1B;AAGA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,aAAOA,IAAP;AACD,KAND,CAME,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAED,MAAIG,GAAG,GAAG,MAAMP,WAAW,EAA3B;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ,EAnBmB,CAqBnB;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,sBACE;AAAA,2BAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAFF,mBADF;AAMD;;GAjDcX,G;;KAAAA,G;AAmDf,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport HomeTest from \"./home\";\n\nasync function App() {\n  const [state, setState] = useState({\n    btc: \"\",\n  });\n\n  async function getBtcPrice() {\n    try {\n      let response = await fetch(\n        \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\"\n      );\n      const json = await response.json();\n      return json;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  let abc = await getBtcPrice();\n\n  console.log(abc)\n\n  // let testa = {};\n\n  // async function test() {\n  //   let abc = await getBtcPrice();\n  //   testa = abc\n  // }\n\n  // test()\n\n  // console.log(testa)\n\n  // let test = {};\n\n  // getBtcPrice().then((result) => {\n  //   console.log(\"result\", result);\n  //   // return result\n  // });\n\n  // console.log(\"test\", test);\n\n  // console.log(\"btcPrice\", btcPrice)\n\n  return (\n    <>\n      {/* {test.bitcoin.usd} */}\n      <HomeTest />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}