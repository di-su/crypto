{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState({\n    btc: \"\"\n  });\n\n  async function getBtcPrice() {\n    try {\n      let response = await fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\");\n      const json = await response.json();\n      return json;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  getBtcPrice().then(result => {\n    console.log(result);\n    setState({\n      btc: \"asd\"\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(App, \"X8aZlefCJA/OWlNkEwE2gPgmv2I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/disu/Documents/GitHub/crypto/src/App.tsx"],"names":["useState","App","state","setState","btc","getBtcPrice","response","fetch","json","err","console","log","then","result"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC;AACjCI,IAAAA,GAAG,EAAE;AAD4B,GAAD,CAAlC;;AAIA,iBAAeC,WAAf,GAA6B;AAC3B,QAAI;AACF,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CACxB,6EADwB,CAA1B;AAGA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,aAAOA,IAAP;AACD,KAND,CAME,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAEDJ,EAAAA,WAAW,GAAGO,IAAd,CAAoBC,MAAD,IAAY;AAC7BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACAV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAD,CAAR;AACD,GAHD;AAKA,sBACE,qCADF;AAKD;;GA3BQH,G;;KAAAA,G;AA6BT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport HomeTest from \"./home\";\n\nfunction App() {\n  const [state, setState] = useState({\n    btc: \"\",\n  });\n\n  async function getBtcPrice() {\n    try {\n      let response = await fetch(\n        \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\"\n      );\n      const json = await response.json();\n      return json;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  getBtcPrice().then((result) => {\n    console.log(result);\n    setState({ btc: \"asd\" });\n  });\n\n  return (\n    <>\n      {/* <HomeTest /> */}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}