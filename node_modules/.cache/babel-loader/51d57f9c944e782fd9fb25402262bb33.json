{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState({\n    btc: \"\"\n  });\n  useEffect(() => {\n    getBtcPrice().then(result => {\n      setState({ ...state,\n        btc: result\n      });\n    });\n  }, []);\n\n  async function getBtcPrice() {\n    try {\n      let response = await fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\");\n      const json = await response.json();\n      return json;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(App, \"uJstpoEiPiDKMt0uHg7wzfReizc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/disu/Documents/GitHub/crypto/src/App.tsx"],"names":["useEffect","useState","App","state","setState","btc","getBtcPrice","then","result","response","fetch","json","err","console","log"],"mappings":";;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC;AACjCI,IAAAA,GAAG,EAAE;AAD4B,GAAD,CAAlC;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,WAAW,GAAGC,IAAd,CAAoBC,MAAD,IAAY;AAC7BJ,MAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYE,QAAAA,GAAG,EAAEG;AAAjB,OAAD,CAAR;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,iBAAeF,WAAf,GAA6B;AAC3B,QAAI;AACF,UAAIG,QAAQ,GAAG,MAAMC,KAAK,CACxB,6EADwB,CAA1B;AAGA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,aAAOA,IAAP;AACD,KAND,CAME,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAED,sBAAO,qCAAP;AACD;;GAxBQV,G;;KAAAA,G;AA0BT,eAAeA,GAAf","sourcesContent":["import { cleanup } from \"@testing-library/react\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport HomeTest from \"./home\";\n\nfunction App() {\n  const [state, setState] = useState({\n    btc: \"\",\n  });\n\n  useEffect(() => {\n    getBtcPrice().then((result) => {\n      setState({ ...state, btc: result });\n    });\n  }, []);\n\n  async function getBtcPrice() {\n    try {\n      let response = await fetch(\n        \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\"\n      );\n      const json = await response.json();\n      return json;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return <>{/* <HomeTest /> */}</>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}