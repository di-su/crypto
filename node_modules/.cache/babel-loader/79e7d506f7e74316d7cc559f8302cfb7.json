{"ast":null,"code":"var _jsxFileName = \"/Users/disu/Documents/GitHub/crypto/src/App.tsx\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport HomeTest from \"./home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst [state, setState] = useState({\n  btc: \"\"\n});\n\nfunction App() {\n  async function getBtcPrice() {\n    try {\n      let response = await fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\");\n      const json = await response.json();\n      return json;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  getBtcPrice().then(result => {\n    console.log(result); // setState({btc: \"asd\"})\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(HomeTest, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/disu/Documents/GitHub/crypto/src/App.tsx"],"names":["useState","HomeTest","state","setState","btc","App","getBtcPrice","response","fetch","json","err","console","log","then","result"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,QAArB;;;AAEA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC;AACjCI,EAAAA,GAAG,EAAE;AAD4B,CAAD,CAAlC;;AAIA,SAASC,GAAT,GAAe;AACX,iBAAeC,WAAf,GAA6B;AAC7B,QAAI;AACF,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CACxB,6EADwB,CAA1B;AAGA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,aAAOA,IAAP;AACD,KAND,CAME,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAEDJ,EAAAA,WAAW,GAAGO,IAAd,CAAmBC,MAAM,IAAI;AAC3BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ,EAD2B,CAE3B;AACD,GAHD;AAMA,sBACE;AAAA,2BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD;;KAxBQT,G;AA0BT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport HomeTest from \"./home\";\n\nconst [state, setState] = useState({\n  btc: \"\",\n});\n\nfunction App() {\n    async function getBtcPrice() {\n    try {\n      let response = await fetch(\n        \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\"\n      );\n      const json = await response.json();\n      return json;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  getBtcPrice().then(result => {\n    console.log(result)\n    // setState({btc: \"asd\"})\n  });\n\n\n  return (\n    <>\n      <HomeTest />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}